/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-05-23 17:46:09 UTC)
 * on 2013-05-26 at 17:39:15 UTC 
 * Modify at your own risk.
 */

package com.appspot.ludounchained.controllerEndpoint;

/**
 * Service definition for ControllerEndpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ControllerEndpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ControllerEndpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 14,
        "You are currently running with version %s of google-api-client. " +
        "You need version 1.14 of google-api-client to run version " +
        "1.14.2-beta of the  library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myapp.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "controllerEndpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ControllerEndpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ControllerEndpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "listGame".
   *
   * This request holds the parameters needed by the the controllerEndpoint server.  After setting any
   * optional parameters, call the {@link ListGame#execute()} method to invoke the remote operation.
   *
   * @param sessionId
   * @return the request
   */
  public ListGame listGame(java.lang.String sessionId) throws java.io.IOException {
    ListGame result = new ListGame(sessionId);
    initialize(result);
    return result;
  }

  public class ListGame extends ControllerEndpointRequest<com.appspot.ludounchained.controllerEndpoint.model.CollectionResponseGame> {

    private static final String REST_PATH = "game/{sessionId}";

    /**
     * Create a request for the method "listGame".
     *
     * This request holds the parameters needed by the the controllerEndpoint server.  After setting
     * any optional parameters, call the {@link ListGame#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListGame#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param sessionId
     * @since 1.13
     */
    protected ListGame(java.lang.String sessionId) {
      super(ControllerEndpoint.this, "GET", REST_PATH, null, com.appspot.ludounchained.controllerEndpoint.model.CollectionResponseGame.class);
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListGame setAlt(java.lang.String alt) {
      return (ListGame) super.setAlt(alt);
    }

    @Override
    public ListGame setFields(java.lang.String fields) {
      return (ListGame) super.setFields(fields);
    }

    @Override
    public ListGame setKey(java.lang.String key) {
      return (ListGame) super.setKey(key);
    }

    @Override
    public ListGame setOauthToken(java.lang.String oauthToken) {
      return (ListGame) super.setOauthToken(oauthToken);
    }

    @Override
    public ListGame setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListGame) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListGame setQuotaUser(java.lang.String quotaUser) {
      return (ListGame) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListGame setUserIp(java.lang.String userIp) {
      return (ListGame) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public ListGame setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListGame setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListGame setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListGame set(String parameterName, Object value) {
      return (ListGame) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "login".
   *
   * This request holds the parameters needed by the the controllerEndpoint server.  After setting any
   * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
   *
   * @param username
   * @param password
   * @return the request
   */
  public Login login(java.lang.String username, java.lang.String password) throws java.io.IOException {
    Login result = new Login(username, password);
    initialize(result);
    return result;
  }

  public class Login extends ControllerEndpointRequest<com.appspot.ludounchained.controllerEndpoint.model.Session> {

    private static final String REST_PATH = "login/{username}/{password}";

    /**
     * Create a request for the method "login".
     *
     * This request holds the parameters needed by the the controllerEndpoint server.  After setting
     * any optional parameters, call the {@link Login#execute()} method to invoke the remote
     * operation. <p> {@link
     * Login#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param username
     * @param password
     * @since 1.13
     */
    protected Login(java.lang.String username, java.lang.String password) {
      super(ControllerEndpoint.this, "POST", REST_PATH, null, com.appspot.ludounchained.controllerEndpoint.model.Session.class);
      this.username = com.google.api.client.util.Preconditions.checkNotNull(username, "Required parameter username must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public Login setAlt(java.lang.String alt) {
      return (Login) super.setAlt(alt);
    }

    @Override
    public Login setFields(java.lang.String fields) {
      return (Login) super.setFields(fields);
    }

    @Override
    public Login setKey(java.lang.String key) {
      return (Login) super.setKey(key);
    }

    @Override
    public Login setOauthToken(java.lang.String oauthToken) {
      return (Login) super.setOauthToken(oauthToken);
    }

    @Override
    public Login setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Login) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Login setQuotaUser(java.lang.String quotaUser) {
      return (Login) super.setQuotaUser(quotaUser);
    }

    @Override
    public Login setUserIp(java.lang.String userIp) {
      return (Login) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String username;

    /**

     */
    public java.lang.String getUsername() {
      return username;
    }

    public Login setUsername(java.lang.String username) {
      this.username = username;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public Login setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public Login set(String parameterName, Object value) {
      return (Login) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "newGame".
   *
   * This request holds the parameters needed by the the controllerEndpoint server.  After setting any
   * optional parameters, call the {@link NewGame#execute()} method to invoke the remote operation.
   *
   * @param sessionId
   * @return the request
   */
  public NewGame newGame(java.lang.String sessionId) throws java.io.IOException {
    NewGame result = new NewGame(sessionId);
    initialize(result);
    return result;
  }

  public class NewGame extends ControllerEndpointRequest<com.appspot.ludounchained.controllerEndpoint.model.Game> {

    private static final String REST_PATH = "newGame/{sessionId}";

    /**
     * Create a request for the method "newGame".
     *
     * This request holds the parameters needed by the the controllerEndpoint server.  After setting
     * any optional parameters, call the {@link NewGame#execute()} method to invoke the remote
     * operation. <p> {@link
     * NewGame#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param sessionId
     * @since 1.13
     */
    protected NewGame(java.lang.String sessionId) {
      super(ControllerEndpoint.this, "POST", REST_PATH, null, com.appspot.ludounchained.controllerEndpoint.model.Game.class);
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public NewGame setAlt(java.lang.String alt) {
      return (NewGame) super.setAlt(alt);
    }

    @Override
    public NewGame setFields(java.lang.String fields) {
      return (NewGame) super.setFields(fields);
    }

    @Override
    public NewGame setKey(java.lang.String key) {
      return (NewGame) super.setKey(key);
    }

    @Override
    public NewGame setOauthToken(java.lang.String oauthToken) {
      return (NewGame) super.setOauthToken(oauthToken);
    }

    @Override
    public NewGame setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (NewGame) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public NewGame setQuotaUser(java.lang.String quotaUser) {
      return (NewGame) super.setQuotaUser(quotaUser);
    }

    @Override
    public NewGame setUserIp(java.lang.String userIp) {
      return (NewGame) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public NewGame setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public NewGame set(String parameterName, Object value) {
      return (NewGame) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "register".
   *
   * This request holds the parameters needed by the the controllerEndpoint server.  After setting any
   * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.ludounchained.controllerEndpoint.model.User}
   * @return the request
   */
  public Register register(com.appspot.ludounchained.controllerEndpoint.model.User content) throws java.io.IOException {
    Register result = new Register(content);
    initialize(result);
    return result;
  }

  public class Register extends ControllerEndpointRequest<com.appspot.ludounchained.controllerEndpoint.model.Session> {

    private static final String REST_PATH = "register";

    /**
     * Create a request for the method "register".
     *
     * This request holds the parameters needed by the the controllerEndpoint server.  After setting
     * any optional parameters, call the {@link Register#execute()} method to invoke the remote
     * operation. <p> {@link
     * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.ludounchained.controllerEndpoint.model.User}
     * @since 1.13
     */
    protected Register(com.appspot.ludounchained.controllerEndpoint.model.User content) {
      super(ControllerEndpoint.this, "POST", REST_PATH, content, com.appspot.ludounchained.controllerEndpoint.model.Session.class);
    }

    @Override
    public Register setAlt(java.lang.String alt) {
      return (Register) super.setAlt(alt);
    }

    @Override
    public Register setFields(java.lang.String fields) {
      return (Register) super.setFields(fields);
    }

    @Override
    public Register setKey(java.lang.String key) {
      return (Register) super.setKey(key);
    }

    @Override
    public Register setOauthToken(java.lang.String oauthToken) {
      return (Register) super.setOauthToken(oauthToken);
    }

    @Override
    public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Register) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Register setQuotaUser(java.lang.String quotaUser) {
      return (Register) super.setQuotaUser(quotaUser);
    }

    @Override
    public Register setUserIp(java.lang.String userIp) {
      return (Register) super.setUserIp(userIp);
    }

    @Override
    public Register set(String parameterName, Object value) {
      return (Register) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link ControllerEndpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link ControllerEndpoint}. */
    @Override
    public ControllerEndpoint build() {
      return new ControllerEndpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ControllerEndpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setControllerEndpointRequestInitializer(
        ControllerEndpointRequestInitializer controllerendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(controllerendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
